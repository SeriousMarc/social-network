"""
Django settings for network project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from . import keys
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$n(idaoj&!m5wk_ge!b1bd&srsa9@q8j9fb5(e2o)-qpkc&=o7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'posts',
    'users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'network.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'network.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'NAME': 'network',
    #     'USER': 'postgres',
    #     'PASSWORD': 'mypassword',
    #     'HOST': '127.0.0.1',
    #     'PORT': '5432',
    # }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL          = '/static/'
STATICFILES_DIRS    = (
    os.path.join(BASE_DIR, 'assets'),
)

MEDIA_URL   = '/media/'
MEDIA_ROOT  = os.path.join(BASE_DIR, 'media')

LOGOUT_REDIRECT_URL = 'homepage'
LOGIN_REDIRECT_URL  = 'homepage'

"""
    Create keys.py in the same directory with settings.py
    and set up your API keys as
    HUNTER_API_KEY for emailhunter service &
    CLEARBIT_API_KEY for clearbit service
"""
# emailhunter API key
HUNTER_API_KEY      = keys.HUNTER_API_KEY
#clearbit API key
CLEARBIT_API_KEY    = keys.CLEARBIT_API_KEY

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
}

"""
curl -X POST -d "username=alex&password=test1234" http://127.0.0.1:8000/api/auth/token/
http POST http://127.0.0.1:8000/api/auth/token/ username=alex password=test1234

eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyMiwidXNlcm5hbWUiOiJhbGV4IiwiZXhwIjoxNTIwNDU1OTE2LCJlbWFpbCI6ImFsZXhAYWxleG1hY2Nhdy5jb20ifQ.dC2h-IRvbGQbP-tke_8iEKmR28JJwEU-YubNEDniqDQ
curl -H "Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyMiwidXNlcm5hbWUiOiJhbGV4IiwiZXhwIjoxNTIwNDU1OTE2LCJlbWFpbCI6ImFsZXhAYWxleG1hY2Nhdy5jb20ifQ.dC2h-IRvbGQbP-tke_8iEKmR28JJwEU-YubNEDniqDQ
" http://127.0.0.1:8000/api/posts/

curl -X POST -H "Authorization :JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyMiwidXNlcm5hbWUiOiJhbGV4IiwiZXhwIjoxNTIwNDQzMDM4LCJlbWFpbCI6ImFsZXhAYWxleG1hY2Nhdy5jb20ifQ.znItiO57bEf1JDpxCztnIIsFgpQy7oJhQsrzUdMCXg0" -H "Content-Type: application/json" -d '{"title":"curltitle","slug":"curltitle","content":"something about curl"}' http://127.0.0.1:8000/api/posts/create/

curl -H "Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyMiwidXNlcm5hbWUiOiJhbGV4IiwiZXhwIjoxNTIwNDQzMDM4LCJlbWFpbCI6ImFsZXhAYWxleG1hY2Nhdy5jb20ifQ.znItiO57bEf1JDpxCztnIIsFgpQy7oJhQsrzUdMCXg0
" http://127.0.0.1:8000/api/posts/

"""
